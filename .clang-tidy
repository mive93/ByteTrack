# Based on https://github.com/eclipse-iceoryx/iceoryx/blob/master/.clang-tidy
#
# NOTE: following checks are disabled, because they have duplicates in other group:
#
# - readability-magic-numbers (duplicate of cppcoreguidelines-avoid-magic-numbers)
# - hicpp-no-malloc (duplicate of cppcoreguidelines-no-malloc)
# - hicpp-member-init (duplicate of cppcoreguidelines-pro-type-member-init)
# - performance-move-const-arg (duplicate of hicpp-move-const-arg)
# - bugprone-use-after-move (duplicate of hicpp-move-const-arg)

Checks: '
-*,
readability-*,
clang-analyzer-*,
cert-*,
bugprone-*,
-readability-named-parameter,
-readability-avoid-const-params-in-decls,
-readability-else-after-return,performance-*,
-readability-redundant-access-specifiers,hicpp-*,
-readability-magic-numbers,
-hicpp-named-parameter,
-hicpp-avoid-c-arrays,cppcoreguidelines-*,
-hicpp-no-array-decay,-hicpp-signed-bitwise,
-hicpp-vararg,
-hicpp-no-malloc,
-hicpp-member-init,
-performance-move-const-arg,
-cppcoreguidelines-avoid-c-arrays,
-cppcoreguidelines-pro-bounds-constant-array-index,
-cppcoreguidelines-pro-bounds-array-to-pointer-decay,
-cppcoreguidelines-pro-type-vararg,concurrency-*,
-cppcoreguidelines-macro-usage,
-cppcoreguidelines-avoid-non-const-global-variables,
-cppcoreguidelines-pro-type-reinterpret-cast,
-bugprone-use-after-move,
-hicpp-move-const-arg,
-hicpp-invalid-access-moved'

CheckOptions:
  - { key: readability-identifier-naming.ClassCase,               value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,                value: CamelCase }
  - { key: readability-identifier-naming.StructCase,              value: CamelCase }
  - { key: readability-identifier-naming.UnionCase,               value: CamelCase }
  - { key: readability-identifier-naming.MethodCase,              value: camelBack }
  - { key: readability-identifier-naming.FunctionCase,            value: camelBack }
  - { key: readability-identifier-naming.NamespaceCase,           value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix,     value: m }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,   value: m }
  - { key: readability-identifier-naming.MemberCase,              value: camelBack }
  - { key: readability-identifier-naming.ConstexprVariableCase,   value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,        value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase,      value: UPPER_CASE }
  - { key: readability-identifier-naming.TemplateParameterCase,   value: CamelCase }
  - { key: readability-identifier-naming.TypeAliasSuffix,         value: _t}
  - { key: readability-function-size.LineThreshold,               value: 200 }
  - { key: readability-function-size.StatementThreshold,          value: 200 }
  - { key: readability-function-size.BranchThreshold,             value: 10 }
  - { key: readability-function-size.ParameterThreshold,          value: 3 }

